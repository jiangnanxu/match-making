# -- coding utf-8 --
import sqlite3
import random

conn = sqlite3.connect('site.db')

c = conn.cursor()

c.execute(CREATE TABLE IF NOT EXISTS User(id INTEGER PRIMARY KEY, username TEXT, email TEXT, image_file TEXT, password TEXT, state TEXT, age INTEGER, gender TEXT, education TEXT, personality TEXT, posts TEXT, preferences TEXT))
c.execute(CREATE TABLE IF NOT EXISTS Preferences(preferencesid INTERGER PRIMARY KEY, prefage INTERGER, prefstate TEXT, prefpersonality TEXT, prefeducation TEXT, username TEXT, FOREIGN KEY(username) REFERENCES User(id) ))
c.execute(CREATE TABLE IF NOT EXISTS results(id INTEGER PRIMARY KEY, uid INTEGER, name TEXT, score TEXT))

rchars=abcdedfhijklmnopqrstuvwxyz1234567890
stlist=['Victoria','New South Wales','Queensland','South Australia','Tasmina','Western Astralia','Astralia Capital Territory']
fm=['Female','Male']
edlist=['Highschool','Tertiary degree','Masterphd']
stc=['Same state','Any']
agepr=['Older','Younger','Any']
edpre=['Any','Tertiary','Masterphd']
pepre=['Neutral','Extroverted','Introverted']
pehi=['Any','Higher','Lower']




	
	
def inputdata()
	
from datetime import datetime
from app import db, login_manager
from flask_login import UserMixin

@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))


class User(db.Model, UserMixin):
	id = db.Column(db.Integer, primary_key=True)
	username = db.Column(db.String(20), unique=True,nullable=False)
	email = db.Column(db.String(120), unique=True,nullable=False)
	image_file = db.Column(db.String(20),nullable=False, default='static/profile_pics/default.jpg')
	password = db.Column(db.String(60), nullable=False)
	state = db.Column(db.String(60))
	age = db.Column(db.Integer)
	height = db.Column(db.Integer)
	gender = db.Column(db.String(8))
	education = db.Column(db.String(60))
	personality = db.Column(db.String(60))
	posts = db.relationship('Post', backref='author', lazy=True)
	preferences = db.relationship('Preferences', backref='pref', lazy=True)
	
	def is_active(self):    
		return True
	def __repr__(self):
		return f"User('{self.username}','{self.email}','{self.image_file}')"

class Post(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    date_posted = db.Column(db.DateTime, nullable=False, default=datetime.utcnow())
    content = db.Column(db.Text, nullable=False)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    
    def __repr__(self):
        return f"Post('{self.title}','{self.date_posted}')"

class results(db.Model):
	id = db.Column(db.Integer, primary_key=True)
	uid = db.Column(db.Integer)
	name = db.Column(db.String(60))
	score = db.Column(db.String(60))
	state = db.Column(db.String(60))
	education = db.Column(db.String(60))
	image_file = db.Column(db.String(20),nullable=False, default='static/profile_pics/default.jpg')
	age = db.Column(db.Integer)
	personality = db.Column(db.String(60))
	height = db.Column(db.Integer)
	
	
	
	def __repr__(self):
            return f"results('{self.uid}','{self.name}','{self.score}','{self.state}','{self.education}','{self.image_file}','{self.age}','{self.personality}','{self.height}')"

    # Preference db 
class Preferences(db.Model):
	preferencesid = db.Column(db.Integer, primary_key=True)
	prefage = db.Column(db.String(60))
	prefstate = db.Column(db.String(60))
	prefpersonality = db.Column(db.String(60))
	prefeducation = db.Column(db.String(60))
	perfheight = db.Column(db.String(60))
	username = db.Column(db.String, db.ForeignKey('user.username'))
	def is_active(self):
		return True
	def __repr__(self):
		return f"Preferences('{self.prefage}','{self.prefstate}','{self.prefpersonality}','{self.prefeducation}',{'self.prefheight'})"